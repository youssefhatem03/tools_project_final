{"ast":null,"code":"const handleSubmit = async e => {\n  e.preventDefault();\n  try {\n    const response = await fetch('http://localhost:3000/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(formData)\n    });\n    if (response.ok) {\n      const userData = await response.json(); // Assuming the response contains user data\n      // Store user ID, email, and username in local storage\n      localStorage.setItem('userId', userData.id);\n      localStorage.setItem('email', userData.email);\n      localStorage.setItem('username', userData.username);\n      navigate('./orders/create-order.js');\n    } else {\n      const errorData = await response.json();\n      setErrorMessage(errorData.message || 'Email or password does not match');\n    }\n  } catch (error) {\n    console.error('Error:', error);\n    setErrorMessage('An error occurred. Please try again.');\n  }\n};","map":{"version":3,"names":["handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","formData","ok","userData","json","localStorage","setItem","id","email","username","navigate","errorData","setErrorMessage","message","error","console"],"sources":["C:/Users/Eslam/OneDrive/Desktop/phase0/front-end/src/components/Login.js"],"sourcesContent":["const handleSubmit = async (e) => {\r\n  e.preventDefault();\r\n  try {\r\n    const response = await fetch('http://localhost:3000/login', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(formData),\r\n    });\r\n\r\n    if (response.ok) {\r\n      const userData = await response.json(); // Assuming the response contains user data\r\n      // Store user ID, email, and username in local storage\r\n      localStorage.setItem('userId', userData.id);\r\n      localStorage.setItem('email', userData.email);\r\n      localStorage.setItem('username', userData.username);\r\n      navigate('./orders/create-order.js');\r\n    } else {\r\n      const errorData = await response.json();\r\n      setErrorMessage(errorData.message || 'Email or password does not match');\r\n    }\r\n  } catch (error) {\r\n    console.error('Error:', error);\r\n    setErrorMessage('An error occurred. Please try again.');\r\n  }\r\n};\r\n"],"mappings":"AAAA,MAAMA,YAAY,GAAG,MAAOC,CAAC,IAAK;EAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;EAClB,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAA6B,EAAE;MAC1DC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACC,QAAQ;IAC/B,CAAC,CAAC;IAEF,IAAIP,QAAQ,CAACQ,EAAE,EAAE;MACf,MAAMC,QAAQ,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC,CAAC,CAAC;MACxC;MACAC,YAAY,CAACC,OAAO,CAAC,QAAQ,EAAEH,QAAQ,CAACI,EAAE,CAAC;MAC3CF,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEH,QAAQ,CAACK,KAAK,CAAC;MAC7CH,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEH,QAAQ,CAACM,QAAQ,CAAC;MACnDC,QAAQ,CAAC,0BAA0B,CAAC;IACtC,CAAC,MAAM;MACL,MAAMC,SAAS,GAAG,MAAMjB,QAAQ,CAACU,IAAI,CAAC,CAAC;MACvCQ,eAAe,CAACD,SAAS,CAACE,OAAO,IAAI,kCAAkC,CAAC;IAC1E;EACF,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAC9BF,eAAe,CAAC,sCAAsC,CAAC;EACzD;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}