{"ast":null,"code":"var _jsxFileName = \"D:\\\\Discussion\\\\tools3_project\\\\front-end\\\\src\\\\components\\\\Authentication\\\\ProtectedRoute.js\";\n// ProtectedRoute.js\nimport React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  children\n}) => {\n  const isAdminLoggedIn = !!localStorage.getItem('adminId'); // Check if admin ID is stored in localStorage\n\n  return isAdminLoggedIn ? children : /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/admin-login\",\n    replace: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 39\n  }, this);\n};\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","Navigate","jsxDEV","_jsxDEV","ProtectedRoute","children","isAdminLoggedIn","localStorage","getItem","to","replace","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Discussion/tools3_project/front-end/src/components/Authentication/ProtectedRoute.js"],"sourcesContent":["// ProtectedRoute.js\r\nimport React from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\n\r\nconst ProtectedRoute = ({ children }) => {\r\n  const isAdminLoggedIn = !!localStorage.getItem('adminId'); // Check if admin ID is stored in localStorage\r\n\r\n  return isAdminLoggedIn ? children : <Navigate to=\"/admin-login\" replace />;\r\n};\r\n\r\nexport default ProtectedRoute;\r\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EACvC,MAAMC,eAAe,GAAG,CAAC,CAACC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC;;EAE3D,OAAOF,eAAe,GAAGD,QAAQ,gBAAGF,OAAA,CAACF,QAAQ;IAACQ,EAAE,EAAC,cAAc;IAACC,OAAO;EAAA;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC5E,CAAC;AAACC,EAAA,GAJIX,cAAc;AAMpB,eAAeA,cAAc;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}